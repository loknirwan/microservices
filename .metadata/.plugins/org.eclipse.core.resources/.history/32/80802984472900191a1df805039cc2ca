package com.service.patient.cloud.property;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

@Component
@Scope("singleton")
public class HibernatePropertyHolder {
	
	@Value("${patients.hibernate.dialect}")
	private String dilect;
	
	@Value("${patients.hibernate.show_sql}")
	private String showSql;
	
	@Value("${patients.hibernate.format_sql}")
	private String formatSql;
	
	@Value("${patients.hibernate.cache.use_second_level_cache}")
	private String useSecondLevelCache;
	
	@Value("${patients.hibernate.cache.query_cache_factory}")
	private String queryCacheFactory;
	
	@Value("${patients.hibernate.cache.region.factory_class}")
	private String regionFactoryClass;
	
	public String getDilect() {
		return dilect;
	}
	public void setDilect(String dilect) {
		this.dilect = dilect;
	}
	public String getShowSql() {
		return showSql;
	}
	public void setShowSql(String showSql) {
		this.showSql = showSql;
	}
	public String getFormatSql() {
		return formatSql;
	}
	public void setFormatSql(String formatSql) {
		this.formatSql = formatSql;
	}
	public String getUseSecondLevelCache() {
		return useSecondLevelCache;
	}
	public void setUseSecondLevelCache(String useSecondLevelCache) {
		this.useSecondLevelCache = useSecondLevelCache;
	}
	public String getQueryCacheFactory() {
		return queryCacheFactory;
	}
	public void setQueryCacheFactory(String queryCacheFactory) {
		this.queryCacheFactory = queryCacheFactory;
	}
	public String getRegionFactoryClass() {
		return regionFactoryClass;
	}
	public void setRegionFactoryClass(String regionFactoryClass) {
		this.regionFactoryClass = regionFactoryClass;
	}
}
