package com.service.patient.config;

import java.util.Properties;

import javax.persistence.EntityManagerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.DependsOn;
import org.springframework.orm.jpa.JpaDialect;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.JpaVendorAdapter;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaDialect;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.transaction.PlatformTransactionManager;

@Configuration
@ComponentScan(basePackages= {"com.service.patient.service", "com.service.patient.repository"})
public class PatientRootContextInitialiser {
	
	@Autowired
	@DependsOn({"entityManagerFactory"})
	@Bean("transactionManager")
	public PlatformTransactionManager transactionManager(EntityManagerFactory emf) {
		return new JpaTransactionManager(emf);
	}

	@Autowired
	@DependsOn({"jpaDialect", "jpaVendorAdapter", "hibernateProperties"})
	@Bean("entityManagerFactory")
	public EntityManagerFactory entityManagerFactory(JpaDialect jpaDialect, JpaVendorAdapter jpaVendorAdapter, Properties jpaProperties) {
		LocalContainerEntityManagerFactoryBean factoryBean = new LocalContainerEntityManagerFactoryBean();
		factoryBean.setPackagesToScan("com.service.patinet.entity");
		factoryBean.setJpaDialect(new HibernateJpaDialect());
		factoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
		factoryBean.setJpaProperties(jpaProperties);
	}
	
	@Bean("jpaDialect")
	public JpaDialect jpaDialect() {
		return new HibernateJpaDialect();
	}
	
	@Bean("jpaVendorAdapter")
	public JpaVendorAdapter jpaVendorAdapter() {
		return new HibernateJpaVendorAdapter();
	}
	
	@Bean("hibernateProperties")
	public Properties hibernateProperties() {
		Properties properties = new Properties();
		return properties;
	}
	
}
